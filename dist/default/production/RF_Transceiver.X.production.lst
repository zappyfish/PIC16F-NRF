

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Tue May 16 22:40:08 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1503
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 1.41
    19                           ; Generated 25/01/2017 GMT
    20                           ; 
    21                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F1503 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000E                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  008C                     	;# 
    79  008E                     	;# 
    80  0091                     	;# 
    81  0092                     	;# 
    82  0093                     	;# 
    83  0095                     	;# 
    84  0096                     	;# 
    85  0097                     	;# 
    86  0099                     	;# 
    87  009A                     	;# 
    88  009B                     	;# 
    89  009B                     	;# 
    90  009C                     	;# 
    91  009D                     	;# 
    92  009E                     	;# 
    93  009F                     	;# 
    94  010C                     	;# 
    95  010E                     	;# 
    96  0111                     	;# 
    97  0112                     	;# 
    98  0113                     	;# 
    99  0114                     	;# 
   100  0115                     	;# 
   101  0116                     	;# 
   102  0117                     	;# 
   103  0118                     	;# 
   104  0119                     	;# 
   105  011D                     	;# 
   106  018C                     	;# 
   107  018E                     	;# 
   108  0191                     	;# 
   109  0191                     	;# 
   110  0192                     	;# 
   111  0193                     	;# 
   112  0193                     	;# 
   113  0194                     	;# 
   114  0195                     	;# 
   115  0196                     	;# 
   116  0197                     	;# 
   117  020C                     	;# 
   118  0211                     	;# 
   119  0211                     	;# 
   120  0212                     	;# 
   121  0212                     	;# 
   122  0213                     	;# 
   123  0213                     	;# 
   124  0214                     	;# 
   125  0214                     	;# 
   126  0215                     	;# 
   127  0215                     	;# 
   128  0215                     	;# 
   129  0216                     	;# 
   130  0216                     	;# 
   131  0217                     	;# 
   132  0217                     	;# 
   133  0391                     	;# 
   134  0392                     	;# 
   135  0393                     	;# 
   136  0498                     	;# 
   137  0498                     	;# 
   138  0499                     	;# 
   139  049A                     	;# 
   140  049B                     	;# 
   141  049B                     	;# 
   142  049C                     	;# 
   143  049D                     	;# 
   144  049E                     	;# 
   145  049F                     	;# 
   146  0611                     	;# 
   147  0612                     	;# 
   148  0613                     	;# 
   149  0613                     	;# 
   150  0614                     	;# 
   151  0615                     	;# 
   152  0616                     	;# 
   153  0616                     	;# 
   154  0617                     	;# 
   155  0618                     	;# 
   156  0619                     	;# 
   157  0619                     	;# 
   158  061A                     	;# 
   159  061B                     	;# 
   160  061C                     	;# 
   161  061C                     	;# 
   162  0691                     	;# 
   163  0692                     	;# 
   164  0693                     	;# 
   165  0694                     	;# 
   166  0695                     	;# 
   167  0F0F                     	;# 
   168  0F10                     	;# 
   169  0F11                     	;# 
   170  0F12                     	;# 
   171  0F13                     	;# 
   172  0F14                     	;# 
   173  0F15                     	;# 
   174  0F16                     	;# 
   175  0F17                     	;# 
   176  0F18                     	;# 
   177  0F19                     	;# 
   178  0F1A                     	;# 
   179  0F1B                     	;# 
   180  0F1C                     	;# 
   181  0F1D                     	;# 
   182  0F1E                     	;# 
   183  0F1F                     	;# 
   184  0FE3                     	;# 
   185  0FE4                     	;# 
   186  0FE5                     	;# 
   187  0FE6                     	;# 
   188  0FE7                     	;# 
   189  0FE8                     	;# 
   190  0FE9                     	;# 
   191  0FEA                     	;# 
   192  0FEB                     	;# 
   193  0FED                     	;# 
   194  0FEE                     	;# 
   195  0FEF                     	;# 
   196  0000                     	;# 
   197  0001                     	;# 
   198  0002                     	;# 
   199  0003                     	;# 
   200  0004                     	;# 
   201  0005                     	;# 
   202  0006                     	;# 
   203  0007                     	;# 
   204  0008                     	;# 
   205  0009                     	;# 
   206  000A                     	;# 
   207  000B                     	;# 
   208  000C                     	;# 
   209  000E                     	;# 
   210  0011                     	;# 
   211  0012                     	;# 
   212  0013                     	;# 
   213  0015                     	;# 
   214  0016                     	;# 
   215  0016                     	;# 
   216  0017                     	;# 
   217  0018                     	;# 
   218  0019                     	;# 
   219  001A                     	;# 
   220  001B                     	;# 
   221  001C                     	;# 
   222  008C                     	;# 
   223  008E                     	;# 
   224  0091                     	;# 
   225  0092                     	;# 
   226  0093                     	;# 
   227  0095                     	;# 
   228  0096                     	;# 
   229  0097                     	;# 
   230  0099                     	;# 
   231  009A                     	;# 
   232  009B                     	;# 
   233  009B                     	;# 
   234  009C                     	;# 
   235  009D                     	;# 
   236  009E                     	;# 
   237  009F                     	;# 
   238  010C                     	;# 
   239  010E                     	;# 
   240  0111                     	;# 
   241  0112                     	;# 
   242  0113                     	;# 
   243  0114                     	;# 
   244  0115                     	;# 
   245  0116                     	;# 
   246  0117                     	;# 
   247  0118                     	;# 
   248  0119                     	;# 
   249  011D                     	;# 
   250  018C                     	;# 
   251  018E                     	;# 
   252  0191                     	;# 
   253  0191                     	;# 
   254  0192                     	;# 
   255  0193                     	;# 
   256  0193                     	;# 
   257  0194                     	;# 
   258  0195                     	;# 
   259  0196                     	;# 
   260  0197                     	;# 
   261  020C                     	;# 
   262  0211                     	;# 
   263  0211                     	;# 
   264  0212                     	;# 
   265  0212                     	;# 
   266  0213                     	;# 
   267  0213                     	;# 
   268  0214                     	;# 
   269  0214                     	;# 
   270  0215                     	;# 
   271  0215                     	;# 
   272  0215                     	;# 
   273  0216                     	;# 
   274  0216                     	;# 
   275  0217                     	;# 
   276  0217                     	;# 
   277  0391                     	;# 
   278  0392                     	;# 
   279  0393                     	;# 
   280  0498                     	;# 
   281  0498                     	;# 
   282  0499                     	;# 
   283  049A                     	;# 
   284  049B                     	;# 
   285  049B                     	;# 
   286  049C                     	;# 
   287  049D                     	;# 
   288  049E                     	;# 
   289  049F                     	;# 
   290  0611                     	;# 
   291  0612                     	;# 
   292  0613                     	;# 
   293  0613                     	;# 
   294  0614                     	;# 
   295  0615                     	;# 
   296  0616                     	;# 
   297  0616                     	;# 
   298  0617                     	;# 
   299  0618                     	;# 
   300  0619                     	;# 
   301  0619                     	;# 
   302  061A                     	;# 
   303  061B                     	;# 
   304  061C                     	;# 
   305  061C                     	;# 
   306  0691                     	;# 
   307  0692                     	;# 
   308  0693                     	;# 
   309  0694                     	;# 
   310  0695                     	;# 
   311  0F0F                     	;# 
   312  0F10                     	;# 
   313  0F11                     	;# 
   314  0F12                     	;# 
   315  0F13                     	;# 
   316  0F14                     	;# 
   317  0F15                     	;# 
   318  0F16                     	;# 
   319  0F17                     	;# 
   320  0F18                     	;# 
   321  0F19                     	;# 
   322  0F1A                     	;# 
   323  0F1B                     	;# 
   324  0F1C                     	;# 
   325  0F1D                     	;# 
   326  0F1E                     	;# 
   327  0F1F                     	;# 
   328  0FE3                     	;# 
   329  0FE4                     	;# 
   330  0FE5                     	;# 
   331  0FE6                     	;# 
   332  0FE7                     	;# 
   333  0FE8                     	;# 
   334  0FE9                     	;# 
   335  0FEA                     	;# 
   336  0FEB                     	;# 
   337  0FED                     	;# 
   338  0FEE                     	;# 
   339  0FEF                     	;# 
   340                           
   341                           	psect	stringtext
   342  06EB                     __pstringtext:	
   343  06EB                     _RX_PW_P:	
   344  06EB  3411               	retlw	17
   345  06EC  3412               	retlw	18
   346  06ED  3413               	retlw	19
   347  06EE  3414               	retlw	20
   348  06EF  3415               	retlw	21
   349  06F0  3416               	retlw	22
   350  06F1                     __end_of_RX_PW_P:	
   351  06F1                     _RX_ADDR_P:	
   352  06F1  340A               	retlw	10
   353  06F2  340B               	retlw	11
   354  06F3  340C               	retlw	12
   355  06F4  340D               	retlw	13
   356  06F5  340E               	retlw	14
   357  06F6  340F               	retlw	15
   358  06F7                     __end_of_RX_ADDR_P:	
   359  06F7                     _TX_ADDR:	
   360  06F7  3410               	retlw	16
   361  06F8                     __end_of_TX_ADDR:	
   362  0011                     _PIR1bits	set	17
   363  000C                     _PORTAbits	set	12
   364  0095                     _OPTION_REGbits	set	149
   365  008C                     _TRISAbits	set	140
   366  008E                     _TRISCbits	set	142
   367  011D                     _APFCON	set	285
   368  010E                     _LATCbits	set	270
   369  010C                     _LATAbits	set	268
   370  018E                     _ANSELC	set	398
   371  018C                     _ANSELA	set	396
   372  0211                     _SSP1BUF	set	529
   373  0214                     _SSP1STATbits	set	532
   374  0215                     _SSP1CON1bits	set	533
   375  020C                     _WPUAbits	set	524
   376                           
   377                           ; #config settings
   378  0000                     
   379                           	psect	cinit
   380  07FE                     start_initialization:	
   381  07FE                     __initialization:	
   382  07FE                     end_of_initialization:	
   383                           ;End of C runtime variable initialization code
   384                           
   385  07FE                     __end_of__initialization:	
   386  07FE  0020               	movlb	0
   387  07FF  2F47               	ljmp	_main	;jump to C main() function
   388                           
   389                           	psect	cstackCOMMON
   390  0070                     __pcstackCOMMON:	
   391  0070                     ?_SPI_init:	
   392  0070                     ??_SPI_init:	
   393                           ; 1 bytes @ 0x0
   394                           
   395  0070                     ?_configureTX:	
   396                           ; 1 bytes @ 0x0
   397                           
   398  0070                     ?_transmitData:	
   399                           ; 1 bytes @ 0x0
   400                           
   401  0070                     ?_SPI_read_byte:	
   402                           ; 1 bytes @ 0x0
   403                           
   404  0070                     ?_bigBlink:	
   405                           ; 1 bytes @ 0x0
   406                           
   407  0070                     ??_bigBlink:	
   408                           ; 1 bytes @ 0x0
   409                           
   410  0070                     ?_configIO:	
   411                           ; 1 bytes @ 0x0
   412                           
   413  0070                     ??_configIO:	
   414                           ; 1 bytes @ 0x0
   415                           
   416  0070                     ?_SPI_write_byte:	
   417                           ; 1 bytes @ 0x0
   418                           
   419  0070                     ??_SPI_write_byte:	
   420                           ; 1 bytes @ 0x0
   421                           
   422  0070                     ?_main:	
   423                           ; 1 bytes @ 0x0
   424                           
   425                           
   426                           ; 2 bytes @ 0x0
   427  0070                     	ds	1
   428  0071                     bigBlink@i:	
   429  0071                     SPI_write_byte@data:	
   430                           ; 1 bytes @ 0x1
   431                           
   432                           
   433                           ; 1 bytes @ 0x1
   434  0071                     	ds	1
   435  0072                     bigBlink@i_121:	
   436  0072                     SPI_write_byte@ret_data:	
   437                           ; 1 bytes @ 0x2
   438                           
   439                           
   440                           ; 1 bytes @ 0x2
   441  0072                     	ds	1
   442  0073                     ?_SPI_writeArray:	
   443  0073                     ??_SPI_read_byte:	
   444                           ; 1 bytes @ 0x3
   445                           
   446  0073                     bigBlink@x:	
   447                           ; 1 bytes @ 0x3
   448                           
   449  0073                     SPI_writeArray@length:	
   450                           ; 1 bytes @ 0x3
   451                           
   452                           
   453                           ; 1 bytes @ 0x3
   454  0073                     	ds	1
   455  0074                     ??_SPI_writeArray:	
   456  0074                     SPI_read_byte@address:	
   457                           ; 1 bytes @ 0x4
   458                           
   459                           
   460                           ; 1 bytes @ 0x4
   461  0074                     	ds	1
   462  0075                     SPI_read_byte@ret:	
   463                           
   464                           ; 1 bytes @ 0x5
   465  0075                     	ds	1
   466  0076                     SPI_writeArray@ret:	
   467                           
   468                           ; 1 bytes @ 0x6
   469  0076                     	ds	1
   470  0077                     SPI_writeArray@i:	
   471                           
   472                           ; 1 bytes @ 0x7
   473  0077                     	ds	1
   474  0078                     SPI_writeArray@data:	
   475                           
   476                           ; 1 bytes @ 0x8
   477  0078                     	ds	1
   478  0079                     ??_configureTX:	
   479  0079                     ??_transmitData:	
   480                           ; 1 bytes @ 0x9
   481                           
   482                           
   483                           ; 1 bytes @ 0x9
   484  0079                     	ds	1
   485  007A                     transmitData@data:	
   486  007A                     configureTX@write:	
   487                           ; 1 bytes @ 0xA
   488                           
   489                           
   490                           ; 2 bytes @ 0xA
   491  007A                     	ds	1
   492  007B                     transmitData@write:	
   493                           
   494                           ; 2 bytes @ 0xB
   495  007B                     	ds	2
   496  007D                     ??_main:	
   497  007D                     main@last:	
   498                           ; 1 bytes @ 0xD
   499                           
   500                           
   501                           ; 1 bytes @ 0xD
   502  007D                     	ds	1
   503                           
   504                           	psect	maintext
   505  0747                     __pmaintext:	
   506 ;;
   507 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   508 ;;
   509 ;; *************** function _main *****************
   510 ;; Defined at:
   511 ;;		line 45 in file "transmitter.c"
   512 ;; Parameters:    Size  Location     Type
   513 ;;		None
   514 ;; Auto vars:     Size  Location     Type
   515 ;;  last            1   13[COMMON] unsigned char 
   516 ;; Return value:  Size  Location     Type
   517 ;;                  2   26[None  ] int 
   518 ;; Registers used:
   519 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   520 ;; Tracked objects:
   521 ;;		On entry : B1F/0
   522 ;;		On exit  : 0/0
   523 ;;		Unchanged: 0/0
   524 ;; Data sizes:     COMMON   BANK0   BANK1
   525 ;;      Params:         0       0       0
   526 ;;      Locals:         1       0       0
   527 ;;      Temps:          0       0       0
   528 ;;      Totals:         1       0       0
   529 ;;Total ram usage:        1 bytes
   530 ;; Hardware stack levels required when called:    3
   531 ;; This function calls:
   532 ;;		_SPI_init
   533 ;;		_configureTX
   534 ;;		_transmitData
   535 ;; This function is called by:
   536 ;;		Startup code after reset
   537 ;; This function uses a non-reentrant model
   538 ;;
   539                           
   540                           
   541                           ;psect for function _main
   542  0747                     _main:	
   543                           
   544                           ;transmitter.c: 46: uint8_t last = 1;
   545                           
   546                           ;incstack = 0
   547                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   548  0747  01FD               	clrf	main@last
   549  0748  0AFD               	incf	main@last,f
   550                           
   551                           ;transmitter.c: 47: SPI_init();
   552  0749  26F8               	fcall	_SPI_init
   553                           
   554                           ;transmitter.c: 48: LATAbits.LATA1 = 0;
   555  074A  0022               	movlb	2	; select bank2
   556  074B  108C               	bcf	12,1	;volatile
   557                           
   558                           ;transmitter.c: 49: configureTX();
   559  074C  27A3               	fcall	_configureTX
   560  074D                     l685:	
   561                           ;transmitter.c: 50: while(1) {
   562                           
   563                           
   564                           ;transmitter.c: 51: if(PORTAbits.RA5 != last) {
   565  074D  0020               	movlb	0	; select bank0
   566  074E  0E0C               	swapf	12,w	;volatile
   567  074F  0C89               	rrf	9,f
   568  0750  3901               	andlw	1
   569  0751  067D               	xorwf	main@last,w
   570  0752  1903               	skipnz
   571  0753  2F4D               	goto	l685
   572                           
   573                           ;transmitter.c: 52: last = PORTAbits.RA5;
   574  0754  3000               	movlw	0
   575  0755  1A8C               	btfsc	12,5	;volatile
   576  0756  3001               	movlw	1
   577  0757  00FD               	movwf	main@last
   578                           
   579                           ;transmitter.c: 53: LATAbits.LATA1 = last;
   580  0758  0C7D               	rrf	main@last,w
   581  0759  0022               	movlb	2	; select bank2
   582  075A  1C03               	skipc
   583  075B  108C               	bcf	12,1	;volatile
   584  075C  1803               	skipnc
   585  075D  148C               	bsf	12,1	;volatile
   586                           
   587                           ;transmitter.c: 54: transmitData(0xCF);
   588  075E  30CF               	movlw	207
   589  075F  2724               	fcall	_transmitData
   590  0760  2F4D               	goto	l685
   591  0761                     __end_of_main:	
   592                           
   593                           	psect	text1
   594  0724                     __ptext1:	
   595 ;; *************** function _transmitData *****************
   596 ;; Defined at:
   597 ;;		line 125 in file "transmitter.c"
   598 ;; Parameters:    Size  Location     Type
   599 ;;  data            1    wreg     unsigned char 
   600 ;; Auto vars:     Size  Location     Type
   601 ;;  data            1   10[COMMON] unsigned char 
   602 ;;  write           2   11[COMMON] unsigned char [2]
   603 ;; Return value:  Size  Location     Type
   604 ;;                  1    wreg      void 
   605 ;; Registers used:
   606 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   607 ;; Tracked objects:
   608 ;;		On entry : 0/0
   609 ;;		On exit  : 0/0
   610 ;;		Unchanged: 0/0
   611 ;; Data sizes:     COMMON   BANK0   BANK1
   612 ;;      Params:         0       0       0
   613 ;;      Locals:         3       0       0
   614 ;;      Temps:          1       0       0
   615 ;;      Totals:         4       0       0
   616 ;;Total ram usage:        4 bytes
   617 ;; Hardware stack levels used:    1
   618 ;; Hardware stack levels required when called:    2
   619 ;; This function calls:
   620 ;;		_SPI_writeArray
   621 ;; This function is called by:
   622 ;;		_main
   623 ;; This function uses a non-reentrant model
   624 ;;
   625                           
   626                           
   627                           ;psect for function _transmitData
   628  0724                     _transmitData:	
   629                           
   630                           ;incstack = 0
   631                           ; Regs used in _transmitData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   632                           ;transmitData@data stored from wreg
   633  0724  00FA               	movwf	transmitData@data
   634                           
   635                           ;transmitter.c: 126: uint8_t write[2];
   636                           ;transmitter.c: 127: write[0]= 0b10100000;
   637  0725  30A0               	movlw	160
   638  0726  00F9               	movwf	??_transmitData
   639  0727  0879               	movf	??_transmitData,w
   640  0728  00FB               	movwf	transmitData@write
   641                           
   642                           ;transmitter.c: 128: write[1] = data;
   643  0729  087A               	movf	transmitData@data,w
   644  072A  00F9               	movwf	??_transmitData
   645  072B  0879               	movf	??_transmitData,w
   646  072C  00FC               	movwf	transmitData@write+1
   647                           
   648                           ;transmitter.c: 129: SPI_writeArray(write, 2);
   649  072D  3002               	movlw	2
   650  072E  00F9               	movwf	??_transmitData
   651  072F  0879               	movf	??_transmitData,w
   652  0730  00F3               	movwf	SPI_writeArray@length
   653  0731  307B               	movlw	(low (transmitData@write| 0))& (0+255)
   654  0732  2761               	fcall	_SPI_writeArray
   655  0733  0008               	return
   656  0734                     __end_of_transmitData:	
   657                           
   658                           	psect	text2
   659  07A3                     __ptext2:	
   660 ;; *************** function _configureTX *****************
   661 ;; Defined at:
   662 ;;		line 78 in file "transmitter.c"
   663 ;; Parameters:    Size  Location     Type
   664 ;;		None
   665 ;; Auto vars:     Size  Location     Type
   666 ;;  write           2   10[COMMON] unsigned char [2]
   667 ;; Return value:  Size  Location     Type
   668 ;;                  1    wreg      void 
   669 ;; Registers used:
   670 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   671 ;; Tracked objects:
   672 ;;		On entry : 0/0
   673 ;;		On exit  : 0/0
   674 ;;		Unchanged: 0/0
   675 ;; Data sizes:     COMMON   BANK0   BANK1
   676 ;;      Params:         0       0       0
   677 ;;      Locals:         2       0       0
   678 ;;      Temps:          1       0       0
   679 ;;      Totals:         3       0       0
   680 ;;Total ram usage:        3 bytes
   681 ;; Hardware stack levels used:    1
   682 ;; Hardware stack levels required when called:    2
   683 ;; This function calls:
   684 ;;		_SPI_read_byte
   685 ;;		_SPI_writeArray
   686 ;;		_bigBlink
   687 ;; This function is called by:
   688 ;;		_main
   689 ;; This function uses a non-reentrant model
   690 ;;
   691                           
   692                           
   693                           ;psect for function _configureTX
   694  07A3                     _configureTX:	
   695                           
   696                           ;transmitter.c: 91: LATCbits.LATC4 = 0;
   697                           
   698                           ;incstack = 0
   699                           ; Regs used in _configureTX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   700  07A3  0022               	movlb	2	; select bank2
   701  07A4  120E               	bcf	14,4	;volatile
   702                           
   703                           ;transmitter.c: 92: _delay((unsigned long)((1)*(16000000UL/4000.0)));
   704  07A5  3006               	movlw	6
   705  07A6  00F9               	movwf	??_configureTX
   706  07A7  3030               	movlw	48
   707  07A8                     u107:	
   708  07A8  0B89               	decfsz	9,f
   709  07A9  2FA8               	goto	u107
   710  07AA  0BF9               	decfsz	??_configureTX,f
   711  07AB  2FA8               	goto	u107
   712  07AC  3200               	nop2
   713                           
   714                           ;transmitter.c: 93: LATCbits.LATC3 = 1;
   715  07AD  0022               	movlb	2	; select bank2
   716  07AE  158E               	bsf	14,3	;volatile
   717                           
   718                           ;transmitter.c: 94: _delay((unsigned long)((10)*(16000000UL/4000.0)));
   719  07AF  3034               	movlw	52
   720  07B0  00F9               	movwf	??_configureTX
   721  07B1  30F2               	movlw	242
   722  07B2                     u117:	
   723  07B2  0B89               	decfsz	9,f
   724  07B3  2FB2               	goto	u117
   725  07B4  0BF9               	decfsz	??_configureTX,f
   726  07B5  2FB2               	goto	u117
   727                           
   728                           ;transmitter.c: 95: uint8_t write[2];
   729                           ;transmitter.c: 96: write[0] = (0x00 & 0b00011111) | 0x00;
   730  07B6  01FA               	clrf	configureTX@write
   731                           
   732                           ;transmitter.c: 97: write[1] = 0b01011010;
   733  07B7  305A               	movlw	90
   734  07B8  00F9               	movwf	??_configureTX
   735  07B9  0879               	movf	??_configureTX,w
   736  07BA  00FB               	movwf	configureTX@write+1
   737                           
   738                           ;transmitter.c: 98: SPI_writeArray(write, 2);
   739  07BB  3002               	movlw	2
   740  07BC  00F9               	movwf	??_configureTX
   741  07BD  0879               	movf	??_configureTX,w
   742  07BE  00F3               	movwf	SPI_writeArray@length
   743  07BF  307A               	movlw	(low (configureTX@write| 0))& (0+255)
   744  07C0  2761               	fcall	_SPI_writeArray
   745                           
   746                           ;transmitter.c: 100: if(SPI_read_byte(0x00) == 0b01011010) {
   747  07C1  3000               	movlw	0
   748  07C2  2714               	fcall	_SPI_read_byte
   749  07C3  3A5A               	xorlw	90
   750  07C4  1D03               	skipz
   751  07C5  2FC8               	goto	l649
   752                           
   753                           ;transmitter.c: 101: bigBlink(10);
   754  07C6  300A               	movlw	10
   755  07C7  277C               	fcall	_bigBlink
   756  07C8                     l649:	
   757                           
   758                           ;transmitter.c: 102: }
   759                           ;transmitter.c: 104: write[0] = (0x01 & 0b00011111) | 0x00;
   760  07C8  01FA               	clrf	configureTX@write
   761  07C9  0AFA               	incf	configureTX@write,f
   762                           
   763                           ;transmitter.c: 105: write[1] = 0b00000001;
   764  07CA  01FB               	clrf	configureTX@write+1
   765  07CB  0AFB               	incf	configureTX@write+1,f
   766                           
   767                           ;transmitter.c: 106: SPI_writeArray(write, 2);
   768  07CC  3002               	movlw	2
   769  07CD  00F9               	movwf	??_configureTX
   770  07CE  0879               	movf	??_configureTX,w
   771  07CF  00F3               	movwf	SPI_writeArray@length
   772  07D0  307A               	movlw	(low (configureTX@write| 0))& (0+255)
   773  07D1  2761               	fcall	_SPI_writeArray
   774                           
   775                           ;transmitter.c: 108: write[0] = (0x02 & 0b00011111) | 0x00;
   776  07D2  3002               	movlw	2
   777  07D3  00F9               	movwf	??_configureTX
   778  07D4  0879               	movf	??_configureTX,w
   779  07D5  00FA               	movwf	configureTX@write
   780                           
   781                           ;transmitter.c: 109: write[1] = 0b00000001;
   782  07D6  01FB               	clrf	configureTX@write+1
   783  07D7  0AFB               	incf	configureTX@write+1,f
   784                           
   785                           ;transmitter.c: 110: SPI_writeArray(write, 2);
   786  07D8  3002               	movlw	2
   787  07D9  00F9               	movwf	??_configureTX
   788  07DA  0879               	movf	??_configureTX,w
   789  07DB  00F3               	movwf	SPI_writeArray@length
   790  07DC  307A               	movlw	(low (configureTX@write| 0))& (0+255)
   791  07DD  2761               	fcall	_SPI_writeArray
   792                           
   793                           ;transmitter.c: 112: write[0] = (RX_PW_P[0] & 0b00011111) | 0x00;
   794  07DE  30EB               	movlw	low (_RX_PW_P| (0+32768))
   795  07DF  0084               	movwf	4
   796  07E0  3086               	movlw	high (_RX_PW_P| (0+32768))
   797  07E1  0085               	movwf	5
   798  07E2  0800               	movf	0,w	;code access
   799  07E3  391F               	andlw	31
   800  07E4  00F9               	movwf	??_configureTX
   801  07E5  0879               	movf	??_configureTX,w
   802  07E6  00FA               	movwf	configureTX@write
   803                           
   804                           ;transmitter.c: 113: write[1] = 0b00000001;
   805  07E7  01FB               	clrf	configureTX@write+1
   806  07E8  0AFB               	incf	configureTX@write+1,f
   807                           
   808                           ;transmitter.c: 114: SPI_writeArray(write, 2);
   809  07E9  3002               	movlw	2
   810  07EA  00F9               	movwf	??_configureTX
   811  07EB  0879               	movf	??_configureTX,w
   812  07EC  00F3               	movwf	SPI_writeArray@length
   813  07ED  307A               	movlw	(low (configureTX@write| 0))& (0+255)
   814  07EE  2761               	fcall	_SPI_writeArray
   815                           
   816                           ;transmitter.c: 116: write[0] = (0x03 & 0b00011111) | 0x00;
   817  07EF  3003               	movlw	3
   818  07F0  00F9               	movwf	??_configureTX
   819  07F1  0879               	movf	??_configureTX,w
   820  07F2  00FA               	movwf	configureTX@write
   821                           
   822                           ;transmitter.c: 117: write[1] = 0b0000011;
   823  07F3  3003               	movlw	3
   824  07F4  00F9               	movwf	??_configureTX
   825  07F5  0879               	movf	??_configureTX,w
   826  07F6  00FB               	movwf	configureTX@write+1
   827                           
   828                           ;transmitter.c: 118: SPI_writeArray(write, 2);
   829  07F7  3002               	movlw	2
   830  07F8  00F9               	movwf	??_configureTX
   831  07F9  0879               	movf	??_configureTX,w
   832  07FA  00F3               	movwf	SPI_writeArray@length
   833  07FB  307A               	movlw	(low (configureTX@write| 0))& (0+255)
   834  07FC  2761               	fcall	_SPI_writeArray
   835  07FD  0008               	return
   836  07FE                     __end_of_configureTX:	
   837                           
   838                           	psect	text3
   839  077C                     __ptext3:	
   840 ;; *************** function _bigBlink *****************
   841 ;; Defined at:
   842 ;;		line 67 in file "transmitter.c"
   843 ;; Parameters:    Size  Location     Type
   844 ;;  x               1    wreg     unsigned char 
   845 ;; Auto vars:     Size  Location     Type
   846 ;;  x               1    3[COMMON] unsigned char 
   847 ;;  i               1    2[COMMON] unsigned char 
   848 ;;  i               1    1[COMMON] unsigned char 
   849 ;; Return value:  Size  Location     Type
   850 ;;                  1    wreg      void 
   851 ;; Registers used:
   852 ;;		wreg, status,2, status,0
   853 ;; Tracked objects:
   854 ;;		On entry : 0/0
   855 ;;		On exit  : 0/0
   856 ;;		Unchanged: 0/0
   857 ;; Data sizes:     COMMON   BANK0   BANK1
   858 ;;      Params:         0       0       0
   859 ;;      Locals:         3       0       0
   860 ;;      Temps:          1       0       0
   861 ;;      Totals:         4       0       0
   862 ;;Total ram usage:        4 bytes
   863 ;; Hardware stack levels used:    1
   864 ;; This function calls:
   865 ;;		Nothing
   866 ;; This function is called by:
   867 ;;		_configureTX
   868 ;; This function uses a non-reentrant model
   869 ;;
   870                           
   871                           
   872                           ;psect for function _bigBlink
   873  077C                     _bigBlink:	
   874                           
   875                           ;incstack = 0
   876                           ; Regs used in _bigBlink: [wreg+status,2+status,0]
   877                           ;bigBlink@x stored from wreg
   878  077C  00F3               	movwf	bigBlink@x
   879                           
   880                           ;transmitter.c: 68: LATAbits.LATA1 = 1;
   881  077D  0022               	movlb	2	; select bank2
   882  077E  148C               	bsf	12,1	;volatile
   883                           
   884                           ;transmitter.c: 69: for(uint8_t i = 0; i<x; ++i) {
   885  077F  01F1               	clrf	bigBlink@i
   886  0780                     l501:	
   887  0780  0873               	movf	bigBlink@x,w
   888  0781  0271               	subwf	bigBlink@i,w
   889  0782  1803               	btfsc	3,0
   890  0783  2F90               	goto	l39
   891                           
   892                           ;transmitter.c: 70: _delay((unsigned long)((10)*(16000000UL/4000.0)));
   893  0784  3034               	movlw	52
   894  0785  00F0               	movwf	??_bigBlink
   895  0786  30F2               	movlw	242
   896  0787                     u127:	
   897  0787  0B89               	decfsz	9,f
   898  0788  2F87               	goto	u127
   899  0789  0BF0               	decfsz	??_bigBlink,f
   900  078A  2F87               	goto	u127
   901  078B  3001               	movlw	1
   902  078C  00F0               	movwf	??_bigBlink
   903  078D  0870               	movf	??_bigBlink,w
   904  078E  07F1               	addwf	bigBlink@i,f
   905  078F  2F80               	goto	l501
   906  0790                     l39:	
   907                           
   908                           ;transmitter.c: 71: }
   909                           ;transmitter.c: 72: LATAbits.LATA1 = 0;
   910  0790  0022               	movlb	2	; select bank2
   911  0791  108C               	bcf	12,1	;volatile
   912                           
   913                           ;transmitter.c: 73: for(uint8_t i = 0; i<x; ++i) {
   914  0792  01F2               	clrf	bigBlink@i_121
   915  0793                     l509:	
   916  0793  0873               	movf	bigBlink@x,w
   917  0794  0272               	subwf	bigBlink@i_121,w
   918  0795  1803               	btfsc	3,0
   919  0796  0008               	return
   920                           
   921                           ;transmitter.c: 74: _delay((unsigned long)((10)*(16000000UL/4000.0)));
   922  0797  3034               	movlw	52
   923  0798  00F0               	movwf	??_bigBlink
   924  0799  30F2               	movlw	242
   925  079A                     u137:	
   926  079A  0B89               	decfsz	9,f
   927  079B  2F9A               	goto	u137
   928  079C  0BF0               	decfsz	??_bigBlink,f
   929  079D  2F9A               	goto	u137
   930  079E  3001               	movlw	1
   931  079F  00F0               	movwf	??_bigBlink
   932  07A0  0870               	movf	??_bigBlink,w
   933  07A1  07F2               	addwf	bigBlink@i_121,f
   934  07A2  2F93               	goto	l509
   935  07A3                     __end_of_bigBlink:	
   936                           
   937                           	psect	text4
   938  0761                     __ptext4:	
   939 ;; *************** function _SPI_writeArray *****************
   940 ;; Defined at:
   941 ;;		line 55 in file "spi.c"
   942 ;; Parameters:    Size  Location     Type
   943 ;;  data            1    wreg     PTR unsigned char 
   944 ;;		 -> transmitData@write(2), configureTX@write(2), 
   945 ;;  length          1    3[COMMON] unsigned char 
   946 ;; Auto vars:     Size  Location     Type
   947 ;;  data            1    8[COMMON] PTR unsigned char 
   948 ;;		 -> transmitData@write(2), configureTX@write(2), 
   949 ;;  i               1    7[COMMON] unsigned char 
   950 ;;  ret             1    6[COMMON] unsigned char 
   951 ;; Return value:  Size  Location     Type
   952 ;;                  1    wreg      unsigned char 
   953 ;; Registers used:
   954 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   955 ;; Tracked objects:
   956 ;;		On entry : 0/0
   957 ;;		On exit  : 0/0
   958 ;;		Unchanged: 0/0
   959 ;; Data sizes:     COMMON   BANK0   BANK1
   960 ;;      Params:         1       0       0
   961 ;;      Locals:         3       0       0
   962 ;;      Temps:          2       0       0
   963 ;;      Totals:         6       0       0
   964 ;;Total ram usage:        6 bytes
   965 ;; Hardware stack levels used:    1
   966 ;; Hardware stack levels required when called:    1
   967 ;; This function calls:
   968 ;;		_SPI_write_byte
   969 ;; This function is called by:
   970 ;;		_configureTX
   971 ;;		_transmitData
   972 ;; This function uses a non-reentrant model
   973 ;;
   974                           
   975                           
   976                           ;psect for function _SPI_writeArray
   977  0761                     _SPI_writeArray:	
   978                           
   979                           ;incstack = 0
   980                           ; Regs used in _SPI_writeArray: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   981                           ;SPI_writeArray@data stored from wreg
   982  0761  00F8               	movwf	SPI_writeArray@data
   983                           
   984                           ;spi.c: 56: LATCbits.LATC3 = 0;
   985  0762  0022               	movlb	2	; select bank2
   986  0763  118E               	bcf	14,3	;volatile
   987                           
   988                           ;spi.c: 57: uint8_t ret;
   989                           ;spi.c: 58: for(uint8_t i = 0; i < length; ++i) {
   990  0764  01F7               	clrf	SPI_writeArray@i
   991  0765                     l631:	
   992  0765  0873               	movf	SPI_writeArray@length,w
   993  0766  0277               	subwf	SPI_writeArray@i,w
   994  0767  1803               	btfsc	3,0
   995  0768  2F79               	goto	l97
   996                           
   997                           ;spi.c: 59: ret = SPI_write_byte(data[i]);
   998  0769  0877               	movf	SPI_writeArray@i,w
   999  076A  0778               	addwf	SPI_writeArray@data,w
  1000  076B  00F4               	movwf	??_SPI_writeArray
  1001  076C  0874               	movf	??_SPI_writeArray,w
  1002  076D  0086               	movwf	6
  1003  076E  0187               	clrf	7
  1004  076F  0801               	movf	1,w
  1005  0770  2706               	fcall	_SPI_write_byte
  1006  0771  00F5               	movwf	??_SPI_writeArray+1
  1007  0772  0875               	movf	??_SPI_writeArray+1,w
  1008  0773  00F6               	movwf	SPI_writeArray@ret
  1009  0774  3001               	movlw	1
  1010  0775  00F4               	movwf	??_SPI_writeArray
  1011  0776  0874               	movf	??_SPI_writeArray,w
  1012  0777  07F7               	addwf	SPI_writeArray@i,f
  1013  0778  2F65               	goto	l631
  1014  0779                     l97:	
  1015                           
  1016                           ;spi.c: 60: }
  1017                           ;spi.c: 62: LATCbits.LATC3 = 1;
  1018  0779  0022               	movlb	2	; select bank2
  1019  077A  158E               	bsf	14,3	;volatile
  1020                           
  1021                           ;spi.c: 63: return ret;
  1022                           ;	Return value of _SPI_writeArray is never used
  1023  077B  0008               	return
  1024  077C                     __end_of_SPI_writeArray:	
  1025                           
  1026                           	psect	text5
  1027  0714                     __ptext5:	
  1028 ;; *************** function _SPI_read_byte *****************
  1029 ;; Defined at:
  1030 ;;		line 66 in file "spi.c"
  1031 ;; Parameters:    Size  Location     Type
  1032 ;;  address         1    wreg     unsigned char 
  1033 ;; Auto vars:     Size  Location     Type
  1034 ;;  address         1    4[COMMON] unsigned char 
  1035 ;;  ret             1    5[COMMON] unsigned char 
  1036 ;; Return value:  Size  Location     Type
  1037 ;;                  1    wreg      unsigned char 
  1038 ;; Registers used:
  1039 ;;		wreg, status,2, status,0, pclath, cstack
  1040 ;; Tracked objects:
  1041 ;;		On entry : 0/0
  1042 ;;		On exit  : 0/0
  1043 ;;		Unchanged: 0/0
  1044 ;; Data sizes:     COMMON   BANK0   BANK1
  1045 ;;      Params:         0       0       0
  1046 ;;      Locals:         2       0       0
  1047 ;;      Temps:          1       0       0
  1048 ;;      Totals:         3       0       0
  1049 ;;Total ram usage:        3 bytes
  1050 ;; Hardware stack levels used:    1
  1051 ;; Hardware stack levels required when called:    1
  1052 ;; This function calls:
  1053 ;;		_SPI_write_byte
  1054 ;; This function is called by:
  1055 ;;		_configureTX
  1056 ;; This function uses a non-reentrant model
  1057 ;;
  1058                           
  1059                           
  1060                           ;psect for function _SPI_read_byte
  1061  0714                     _SPI_read_byte:	
  1062                           
  1063                           ;incstack = 0
  1064                           ; Regs used in _SPI_read_byte: [wreg+status,2+status,0+pclath+cstack]
  1065                           ;SPI_read_byte@address stored from wreg
  1066  0714  00F4               	movwf	SPI_read_byte@address
  1067                           
  1068                           ;spi.c: 67: LATCbits.LATC3 = 0;
  1069  0715  0022               	movlb	2	; select bank2
  1070  0716  118E               	bcf	14,3	;volatile
  1071                           
  1072                           ;spi.c: 68: SPI_write_byte((address & 0b00011111) | 0b00100000);
  1073  0717  0874               	movf	SPI_read_byte@address,w
  1074  0718  391F               	andlw	31
  1075  0719  3820               	iorlw	32
  1076  071A  2706               	fcall	_SPI_write_byte
  1077                           
  1078                           ;spi.c: 69: uint8_t ret = SPI_write_byte(0xFF);
  1079  071B  30FF               	movlw	255
  1080  071C  2706               	fcall	_SPI_write_byte
  1081  071D  00F3               	movwf	??_SPI_read_byte
  1082  071E  0873               	movf	??_SPI_read_byte,w
  1083  071F  00F5               	movwf	SPI_read_byte@ret
  1084                           
  1085                           ;spi.c: 70: LATCbits.LATC3 = 1;
  1086  0720  0022               	movlb	2	; select bank2
  1087  0721  158E               	bsf	14,3	;volatile
  1088                           
  1089                           ;spi.c: 71: return ret;
  1090  0722  0875               	movf	SPI_read_byte@ret,w
  1091  0723  0008               	return
  1092  0724                     __end_of_SPI_read_byte:	
  1093                           
  1094                           	psect	text6
  1095  0706                     __ptext6:	
  1096 ;; *************** function _SPI_write_byte *****************
  1097 ;; Defined at:
  1098 ;;		line 45 in file "spi.c"
  1099 ;; Parameters:    Size  Location     Type
  1100 ;;  data            1    wreg     unsigned char 
  1101 ;; Auto vars:     Size  Location     Type
  1102 ;;  data            1    1[COMMON] unsigned char 
  1103 ;;  ret_data        1    2[COMMON] unsigned char 
  1104 ;; Return value:  Size  Location     Type
  1105 ;;                  1    wreg      unsigned char 
  1106 ;; Registers used:
  1107 ;;		wreg
  1108 ;; Tracked objects:
  1109 ;;		On entry : 0/0
  1110 ;;		On exit  : 0/0
  1111 ;;		Unchanged: 0/0
  1112 ;; Data sizes:     COMMON   BANK0   BANK1
  1113 ;;      Params:         0       0       0
  1114 ;;      Locals:         2       0       0
  1115 ;;      Temps:          1       0       0
  1116 ;;      Totals:         3       0       0
  1117 ;;Total ram usage:        3 bytes
  1118 ;; Hardware stack levels used:    1
  1119 ;; This function calls:
  1120 ;;		Nothing
  1121 ;; This function is called by:
  1122 ;;		_SPI_writeArray
  1123 ;;		_SPI_read_byte
  1124 ;; This function uses a non-reentrant model
  1125 ;;
  1126                           
  1127                           
  1128                           ;psect for function _SPI_write_byte
  1129  0706                     _SPI_write_byte:	
  1130                           
  1131                           ;incstack = 0
  1132                           ; Regs used in _SPI_write_byte: [wreg]
  1133                           ;SPI_write_byte@data stored from wreg
  1134  0706  00F1               	movwf	SPI_write_byte@data
  1135                           
  1136                           ;spi.c: 46: SSP1CON1bits.WCOL = 0;
  1137  0707  0024               	movlb	4	; select bank4
  1138  0708  1395               	bcf	21,7	;volatile
  1139                           
  1140                           ;spi.c: 47: SSP1STATbits.BF = 0;
  1141  0709  1014               	bcf	20,0	;volatile
  1142                           
  1143                           ;spi.c: 48: SSP1BUF = data;
  1144  070A  0871               	movf	SPI_write_byte@data,w
  1145  070B  0091               	movwf	17	;volatile
  1146  070C                     l89:	
  1147                           ;spi.c: 49: while(!SSP1STATbits.BF);
  1148                           
  1149  070C  1C14               	btfss	20,0	;volatile
  1150  070D  2F0C               	goto	l89
  1151                           
  1152                           ;spi.c: 51: uint8_t ret_data = SSP1BUF;
  1153  070E  0811               	movf	17,w	;volatile
  1154  070F  00F0               	movwf	??_SPI_write_byte
  1155  0710  0870               	movf	??_SPI_write_byte,w
  1156  0711  00F2               	movwf	SPI_write_byte@ret_data
  1157                           
  1158                           ;spi.c: 52: return ret_data;
  1159  0712  0872               	movf	SPI_write_byte@ret_data,w
  1160  0713  0008               	return
  1161  0714                     __end_of_SPI_write_byte:	
  1162                           
  1163                           	psect	text7
  1164  06F8                     __ptext7:	
  1165 ;; *************** function _SPI_init *****************
  1166 ;; Defined at:
  1167 ;;		line 34 in file "spi.c"
  1168 ;; Parameters:    Size  Location     Type
  1169 ;;		None
  1170 ;; Auto vars:     Size  Location     Type
  1171 ;;		None
  1172 ;; Return value:  Size  Location     Type
  1173 ;;                  1    wreg      void 
  1174 ;; Registers used:
  1175 ;;		wreg, status,2, status,0, pclath, cstack
  1176 ;; Tracked objects:
  1177 ;;		On entry : 0/0
  1178 ;;		On exit  : 0/0
  1179 ;;		Unchanged: 0/0
  1180 ;; Data sizes:     COMMON   BANK0   BANK1
  1181 ;;      Params:         0       0       0
  1182 ;;      Locals:         0       0       0
  1183 ;;      Temps:          0       0       0
  1184 ;;      Totals:         0       0       0
  1185 ;;Total ram usage:        0 bytes
  1186 ;; Hardware stack levels used:    1
  1187 ;; Hardware stack levels required when called:    1
  1188 ;; This function calls:
  1189 ;;		_configIO
  1190 ;; This function is called by:
  1191 ;;		_main
  1192 ;; This function uses a non-reentrant model
  1193 ;;
  1194                           
  1195                           
  1196                           ;psect for function _SPI_init
  1197  06F8                     _SPI_init:	
  1198                           
  1199                           ;spi.c: 35: SSP1CON1bits.SSPEN = 0;
  1200                           
  1201                           ;incstack = 0
  1202                           ; Regs used in _SPI_init: [wreg+status,2+status,0+pclath+cstack]
  1203  06F8  0024               	movlb	4	; select bank4
  1204  06F9  1295               	bcf	21,5	;volatile
  1205                           
  1206                           ;spi.c: 36: configIO();
  1207  06FA  2734               	fcall	_configIO
  1208                           
  1209                           ;spi.c: 37: SSP1CON1bits.CKP = 0;
  1210  06FB  0024               	movlb	4	; select bank4
  1211  06FC  1215               	bcf	21,4	;volatile
  1212                           
  1213                           ;spi.c: 38: SSP1STATbits.CKE = 1;
  1214  06FD  1714               	bsf	20,6	;volatile
  1215                           
  1216                           ;spi.c: 39: SSP1STATbits.SMP = 0;
  1217  06FE  1394               	bcf	20,7	;volatile
  1218                           
  1219                           ;spi.c: 40: SSP1CON1bits.SSPM = 0b0000;
  1220  06FF  30F0               	movlw	-16
  1221  0700  0595               	andwf	21,f	;volatile
  1222                           
  1223                           ;spi.c: 41: PIR1bits.SSP1IF = 0;
  1224  0701  0020               	movlb	0	; select bank0
  1225  0702  1191               	bcf	17,3	;volatile
  1226                           
  1227                           ;spi.c: 42: SSP1CON1bits.SSPEN = 1;
  1228  0703  0024               	movlb	4	; select bank4
  1229  0704  1695               	bsf	21,5	;volatile
  1230  0705  0008               	return
  1231  0706                     __end_of_SPI_init:	
  1232                           
  1233                           	psect	text8
  1234  0734                     __ptext8:	
  1235 ;; *************** function _configIO *****************
  1236 ;; Defined at:
  1237 ;;		line 19 in file "spi.c"
  1238 ;; Parameters:    Size  Location     Type
  1239 ;;		None
  1240 ;; Auto vars:     Size  Location     Type
  1241 ;;		None
  1242 ;; Return value:  Size  Location     Type
  1243 ;;                  1    wreg      void 
  1244 ;; Registers used:
  1245 ;;		wreg, status,2
  1246 ;; Tracked objects:
  1247 ;;		On entry : 0/0
  1248 ;;		On exit  : 0/0
  1249 ;;		Unchanged: 0/0
  1250 ;; Data sizes:     COMMON   BANK0   BANK1
  1251 ;;      Params:         0       0       0
  1252 ;;      Locals:         0       0       0
  1253 ;;      Temps:          0       0       0
  1254 ;;      Totals:         0       0       0
  1255 ;;Total ram usage:        0 bytes
  1256 ;; Hardware stack levels used:    1
  1257 ;; This function calls:
  1258 ;;		Nothing
  1259 ;; This function is called by:
  1260 ;;		_SPI_init
  1261 ;; This function uses a non-reentrant model
  1262 ;;
  1263                           
  1264                           
  1265                           ;psect for function _configIO
  1266  0734                     _configIO:	
  1267                           
  1268                           ;spi.c: 20: TRISCbits.TRISC3 = 0;
  1269                           
  1270                           ;incstack = 0
  1271                           ; Regs used in _configIO: [wreg+status,2]
  1272  0734  0021               	movlb	1	; select bank1
  1273  0735  118E               	bcf	14,3	;volatile
  1274                           
  1275                           ;spi.c: 21: TRISCbits.TRISC0 = 0;
  1276  0736  100E               	bcf	14,0	;volatile
  1277                           
  1278                           ;spi.c: 22: TRISCbits.TRISC2 = 0;
  1279  0737  110E               	bcf	14,2	;volatile
  1280                           
  1281                           ;spi.c: 23: TRISCbits.TRISC1 = 1;
  1282  0738  148E               	bsf	14,1	;volatile
  1283                           
  1284                           ;spi.c: 24: TRISAbits.TRISA5 = 1;
  1285  0739  168C               	bsf	12,5	;volatile
  1286                           
  1287                           ;spi.c: 25: TRISAbits.TRISA1 = 0;
  1288  073A  108C               	bcf	12,1	;volatile
  1289                           
  1290                           ;spi.c: 26: TRISCbits.TRISC4 = 0;
  1291  073B  120E               	bcf	14,4	;volatile
  1292                           
  1293                           ;spi.c: 27: TRISAbits.TRISA2 = 1;
  1294  073C  150C               	bsf	12,2	;volatile
  1295                           
  1296                           ;spi.c: 28: OPTION_REGbits.nWPUEN = 0;
  1297  073D  1395               	bcf	21,7	;volatile
  1298                           
  1299                           ;spi.c: 29: WPUAbits.WPUA5 = 1;
  1300  073E  0024               	movlb	4	; select bank4
  1301  073F  168C               	bsf	12,5	;volatile
  1302                           
  1303                           ;spi.c: 30: APFCON = 0b00010000;
  1304  0740  3010               	movlw	16
  1305  0741  0022               	movlb	2	; select bank2
  1306  0742  009D               	movwf	29	;volatile
  1307                           
  1308                           ;spi.c: 31: ANSELA = 0x00;
  1309  0743  0023               	movlb	3	; select bank3
  1310  0744  018C               	clrf	12	;volatile
  1311                           
  1312                           ;spi.c: 32: ANSELC = 0x00;
  1313  0745  018E               	clrf	14	;volatile
  1314  0746  0008               	return
  1315  0747                     __end_of_configIO:	
  1316  007E                     btemp	set	126	;btemp
  1317  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    13
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      0       0
    BANK1            32      0       0

Pointer List with Targets:

    SPI_writeArray@data	PTR unsigned char  size(1) Largest target is 2
		 -> transmitData@write(COMMON[2]), configureTX@write(COMMON[2]), 


Critical Paths under _main in COMMON

    _main->_transmitData
    _transmitData->_SPI_writeArray
    _configureTX->_SPI_writeArray
    _SPI_writeArray->_SPI_write_byte
    _SPI_read_byte->_SPI_write_byte

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1854
                                             13 COMMON     1     1      0
                           _SPI_init
                        _configureTX
                       _transmitData
 ---------------------------------------------------------------------------------
 (1) _transmitData                                         4     4      0     761
                                              9 COMMON     4     4      0
                     _SPI_writeArray
 ---------------------------------------------------------------------------------
 (1) _configureTX                                          3     3      0    1047
                                              9 COMMON     3     3      0
                      _SPI_read_byte
                     _SPI_writeArray
                           _bigBlink
 ---------------------------------------------------------------------------------
 (2) _bigBlink                                             4     4      0      60
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (2) _SPI_writeArray                                       6     5      1     691
                                              3 COMMON     6     5      1
                     _SPI_write_byte
 ---------------------------------------------------------------------------------
 (2) _SPI_read_byte                                        3     3      0      60
                                              3 COMMON     3     3      0
                     _SPI_write_byte
 ---------------------------------------------------------------------------------
 (3) _SPI_write_byte                                       3     3      0      30
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _SPI_init                                             0     0      0       0
                           _configIO
 ---------------------------------------------------------------------------------
 (2) _configIO                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI_init
     _configIO
   _configureTX
     _SPI_read_byte
       _SPI_write_byte
     _SPI_writeArray
       _SPI_write_byte
     _bigBlink
   _transmitData
     _SPI_writeArray
       _SPI_write_byte

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       0       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0       0       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Tue May 16 22:40:08 2017

           ?_configureTX 0070              __CFG_CP$OFF 0000                       l39 0790  
                     l89 070C                       l97 0779                      l501 0780  
                    l509 0793                      l631 0765                      l649 07C8  
                    l685 074D                      u107 07A8                      u117 07B2  
                    u127 0787                      u137 079A             __CFG_BORV$LO 0000  
                    wreg 0009             __CFG_LVP$OFF 0000   __size_of_SPI_read_byte 0010  
           _transmitData 0724             __CFG_WRT$OFF 0000                     _main 0747  
                   fsr0h 0005                     fsr1h 0007                     indf0 0000  
                   fsr0l 0004                     indf1 0001                     fsr1l 0006  
                   btemp 007E                     start 0001          __end_of_TX_ADDR 06F8  
        __end_of_RX_PW_P 06F1            __CFG_MCLRE$ON 0000        transmitData@write 007B  
                  ?_main 0070            __CFG_WDTE$OFF 0000           __CFG_BOREN$OFF 0000  
       __end_of_SPI_init 0706                    wtemp0 007E          __initialization 07FE  
           __end_of_main 0761            _SPI_read_byte 0714           __CFG_LPBOR$OFF 0000  
                 ??_main 007D                   _APFCON 011D                   _ANSELA 018C  
                 _ANSELC 018E         __end_of_bigBlink 07A3           __CFG_PWRTE$OFF 0000  
       __end_of_configIO 0747           ?_SPI_read_byte 0070  __size_of_SPI_writeArray 001B  
         __CFG_STVREN$ON 0000  __size_of_SPI_write_byte 000E     __size_of_configureTX 005B  
      __end_of_RX_ADDR_P 06F7  __end_of__initialization 07FE           __pcstackCOMMON 0070  
              ?_SPI_init 0070           _OPTION_REGbits 0095         configureTX@write 007A  
        ??_SPI_read_byte 0073               __pmaintext 0747               ??_SPI_init 0070  
              ?_bigBlink 0070         SPI_read_byte@ret 0075                  _SSP1BUF 0211  
              ?_configIO 0070                  _TX_ADDR 06F7                  _RX_PW_P 06EB  
         _SPI_writeArray 0761           _SPI_write_byte 0706                  __ptext1 0724  
                __ptext2 07A3                  __ptext3 077C                  __ptext4 0761  
                __ptext5 0714                  __ptext6 0706                  __ptext7 06F8  
                __ptext8 0734               ??_bigBlink 0070               ??_configIO 0070  
   end_of_initialization 07FE   __end_of_SPI_writeArray 077C       SPI_writeArray@data 0078  
 __end_of_SPI_write_byte 0714             __pstringtext 06EB                _PORTAbits 000C  
       __CFG_FOSC$INTOSC 0000                _TRISAbits 008C                _TRISCbits 008E  
              _RX_ADDR_P 06F1          ?_SPI_writeArray 0073          ?_SPI_write_byte 0070  
          ??_configureTX 0079         transmitData@data 007A      start_initialization 07FE  
      __size_of_SPI_init 000E            ?_transmitData 0070      __end_of_configureTX 07FE  
      __size_of_bigBlink 0027                ___latbits 0000           ??_transmitData 0079  
      __size_of_configIO 0013    __end_of_SPI_read_byte 0724       SPI_write_byte@data 0071  
              bigBlink@i 0071                bigBlink@x 0073          SPI_writeArray@i 0077  
               _LATAbits 010C                 _LATCbits 010E        SPI_writeArray@ret 0076  
               _PIR1bits 0011              _configureTX 07A3                 _SPI_init 06F8  
 SPI_write_byte@ret_data 0072                 _WPUAbits 020C            bigBlink@i_121 0072  
       ??_SPI_writeArray 0074         ??_SPI_write_byte 0070     __end_of_transmitData 0734  
               _bigBlink 077C     SPI_read_byte@address 0074             _SSP1CON1bits 0215  
               _configIO 0734     SPI_writeArray@length 0073            __size_of_main 001A  
           _SSP1STATbits 0214                 main@last 007D        __CFG_CLKOUTEN$OFF 0000  
  __size_of_transmitData 0010  
